#version 420
#pragma optimize(on)

in vec2 PixelCoordinates;
in vec2 Direction;


uniform sampler2D SourceTexture;
uniform vec4 Channels;

out vec4 gl_FragColor;

       
const vec3[64] TapPosition = {
  vec3(0.2664571106, 0.5060884356, 0.2822656929), vec3(-0.7013458610, 0.2634052634, -0.0304269549), vec3(-0.2870876193, 0.6501968503, 0.2604754865), vec3(0.2182988971, 0.2316659987, 0.7918637395), 
  vec3(-0.8081606627, -0.5140232444, 0.0381176174), vec3(0.0757164210, 0.2996002138, -0.5061494708), vec3(0.5502182245, -0.2590716183, 0.3625904024), vec3(-0.6565446854, -0.4919278622, -0.5224463344), 
  vec3(-0.3083285093, -0.2239753455, 0.1354716569), vec3(0.6904813051, 0.0440382101, -0.0397656187), vec3(0.7870418429, -0.5671254396, -0.2023682296), vec3(-0.7236243486, 0.1777703166, -0.6649067402), 
  vec3(0.7325968146, 0.5198827982, -0.1970580220), vec3(-0.0585039817, 0.9462873936, -0.2408215553), vec3(-0.1436506212, -0.8380077481, -0.2587054074), vec3(-0.0949430838, -0.6865138412, 0.3749198914), 
  vec3(0.2182378620, -0.4081240296, -0.8638874292), vec3(-0.4370555878, 0.0290841404, 0.8721885085), vec3(-0.5319070816, 0.7186803818, -0.3657032847), vec3(0.3152867258, -0.2168950438, -0.3662526309), 
  vec3(-0.2025513500, -0.1202734485, -0.4695883095), vec3(0.3869441748, 0.1860103160, -0.8756065369), vec3(-0.5564439893, -0.4623859227, 0.5963621736), vec3(0.2789086699, -0.5063936114, 0.0904263407), 
  vec3(0.6331064701, 0.2294076383, 0.4615314305), vec3(0.0205999948, -0.4929044545, 0.8170109987), vec3(-0.8204290867, -0.1578722447, 0.4308908284), vec3(-0.2476577014, 0.5895870924, 0.7640308738), 
  vec3(0.7232581377, 0.0075380718, -0.5777459145), vec3(-0.1114841178, -0.0835901946, 0.5344706774), vec3(-0.8795739412, -0.1716055721, -0.2642597854), vec3(-0.5881221890, 0.2539445162, 0.4380932152), 
  vec3(-0.1139255986, 0.2693868876, 0.0057679983), vec3(0.4094057977, -0.2223883718, 0.8525345325), vec3(0.2576067448, -0.9498885870, -0.0248115491), vec3(0.0410473943, -0.7251502872, -0.6332285404), 
  vec3(0.2430188954, 0.0556352437, 0.3390301168), vec3(-0.2545548975, 0.3006988764, -0.8207342625), vec3(0.4355296493, 0.7672658563, -0.4607379436), vec3(0.3547776639, 0.9312723279, 0.0350657664), 
  vec3(0.5837275386, -0.6768700480, 0.3057649434), vec3(-0.3422040343, -0.4460280240, -0.2148808241), vec3(-0.0659504980, 0.8464308381, 0.5251320004), vec3(-0.3920712769, 0.2663960755, -0.4411450624), 
  vec3(0.3021637499, 0.2986236215, -0.1557969898), vec3(-0.6197393537, 0.6727805138, 0.0042420728), vec3(-0.4686727524, -0.5585192442, 0.2110965252), vec3(0.5119479895, -0.6316415668, -0.5736564398), 
  vec3(-0.3224280477, -0.5693227649, -0.6646015644), vec3(-0.6013672352, -0.0727256089, -0.0356151015), vec3(-0.1050752252, 0.6972563863, -0.6539811492), vec3(0.7996764779, 0.4969939291, 0.2057863027), 
  vec3(0.8232978582, -0.2984405160, 0.1118503362), vec3(0.0112002930, -0.5164647102, -0.1390118152), vec3(0.8438673019, -0.2092043757, -0.3093661368), vec3(0.2311166674, 0.6159550548, 0.6417127252), 
  vec3(0.1648304760, 0.6685689688, -0.0947599709), vec3(0.0318308063, -0.0802941993, -0.1532944739), vec3(0.3821222484, -0.5446028113, 0.5887325406), vec3(-0.0257271044, 0.0140079958, -0.9194311500), 
  vec3(-0.4291207492, -0.8671834469, 0.0278023630), vec3(-0.1474959552, 0.5773186684, -0.2718893886), vec3(-0.0473342091, -0.0469679870, 0.9508041739), vec3(-0.3021637499, 0.9214453697, 0.0103457747) 
  };
  
  
float noise( float x ){ return 1.0 + 0.5 * sin( x * 34612.17952 + pow(x,3.1527) ); }

vec2 getRandomTap( int sampleID, vec2 Pixel )
{
  float angle = 
    radians(90.0) * float( int( 1920.0 * Pixel.x ) ) +
    radians(180.0) * float( int( 1080.0 * Pixel.y ) ) +
    noise( Pixel.x * noise( Pixel.y ) );
  mat2x2 Rotation = { { cos(angle), sin(angle) }, { -sin(angle), cos(angle) } };
  vec2 Tap = TapPosition[ sampleID ].xy;
  Tap = Rotation * Tap;
  return Tap;
}      

                                     
void main()                                          
{
  
  vec4 mixedValue = vec4(0.0);  
  float weightSum = 0.0;
  
  for ( int sampleID = 0; sampleID < 8; sampleID++ )
  {
    vec2 samplePosition = PixelCoordinates + 0.012 * getRandomTap( sampleID, PixelCoordinates );
    vec4 sampleValue = texture2D( SourceTexture, samplePosition ).rgba;
    float weight = 1.0;
    
    if ( length( sampleValue.rgb ) < 0.005 ) weight = 0.0;
    //if ( sampleValue.r == 0.0 ) weight = 0.0;
    
    mixedValue += weight * sampleValue;
    weightSum += weight;
  }
  
  vec4 originalValue = texture2D( SourceTexture, PixelCoordinates ).rgba;
  vec4 finalValue = mixedValue / weightSum;
  
  finalValue = Channels * finalValue + ( vec4(1.0) - Channels ) * originalValue;
  
  
  //gl_FragColor = finalValue;

  //gl_FragColor = vec4( PixelCoordinates, 1.0, 1.0 );
  gl_FragColor = vec4( finalValue.rgb, 1.0 );
}